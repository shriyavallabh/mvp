"use strict";exports.id=439,exports.ids=[439],exports.modules={45439:(a,b,c)=>{c.r(b),c.d(b,{createOrReadKeyless:()=>q,removeKeyless:()=>r,safeParseClerkFile:()=>m});var d=c(6844),e=c(79733),f=c(37083);let g=".clerk",h="clerk.lock",i=(...a)=>{let b=(0,e.dc)(),c=(0,e.y4)();return b.join(c(),g,...a)},j=".tmp",k=()=>i(j,"keyless.json"),l=!1;function m(){let{readFileSync:a}=(0,e.p8)();try{let b,c=k();try{b=a(c,{encoding:"utf-8"})||"{}"}catch{b="{}"}return JSON.parse(b)}catch{return}}let n=()=>{let{writeFileSync:a}=(0,e.p8)();l=!0,a(h,"This file can be deleted. Please delete this file and refresh your application",{encoding:"utf8",mode:"0777",flag:"w"})},o=()=>{let{rmSync:a}=(0,e.p8)();try{a(h,{force:!0,recursive:!0})}catch{}l=!1},p=()=>{let{existsSync:a}=(0,e.p8)();return l||a(h)};async function q(){let{writeFileSync:a,mkdirSync:b}=(0,e.p8)();if(p())return null;n();let c=k(),h=i(j,"README.md");b(i(j),{recursive:!0}),function(){let{existsSync:a,writeFileSync:b,readFileSync:c,appendFileSync:d}=(0,e.p8)(),f=(0,e.dc)(),h=(0,e.y4)(),i=f.join(h(),".gitignore");a(i)||b(i,""),c(i,"utf-8").includes(g+"/")||d(i,`
# clerk configuration (can include secrets)
/${g}/
`)}();let l=m();if((null==l?void 0:l.publishableKey)&&(null==l?void 0:l.secretKey))return o(),l;let q=(0,d.n)({}),r=await (0,f.i)().then(f.$).catch(()=>new Headers),s=await q.__experimental_accountlessApplications.createAccountlessApplication({requestHeaders:r}).catch(()=>null);return s&&(a(c,JSON.stringify(s),{encoding:"utf8",mode:"0777",flag:"w"}),a(h,`
## DO NOT COMMIT
This directory is auto-generated from \`@clerk/nextjs\` because you are running in Keyless mode. Avoid committing the \`.clerk/\` directory as it includes the secret key of the unclaimed instance.
  `,{encoding:"utf8",mode:"0777",flag:"w"})),o(),s}function r(){let{rmSync:a}=(0,e.p8)();if(!p()){n();try{a(i(),{force:!0,recursive:!0})}catch{}o()}}}};