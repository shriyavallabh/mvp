#!/usr/bin/expect -f

# Automated deployment using expect
set timeout 30
set password "6f5bb5e75ddf1461711393813d"
set host "139.59.46.240"

# Create deployment script
exec cat > /tmp/webhook-deploy.sh << 'DEPLOY'
#!/bin/bash
set -e

echo "Installing dependencies..."
apt-get update
apt-get install -y nodejs npm nginx certbot python3-certbot-nginx
npm install -g pm2

echo "Creating webhook..."
mkdir -p /home/webhook
cd /home/webhook

cat > webhook.js << 'EOF'
const express = require('express');
const app = express();
app.use(express.json());

const CONFIG = {
    verifyToken: 'jarvish_webhook_2024',
    port: 3000
};

app.get('/webhook', (req, res) => {
    const mode = req.query['hub.mode'];
    const token = req.query['hub.verify_token'];
    const challenge = req.query['hub.challenge'];
    
    console.log(`Verification request: mode=${mode}, token=${token}`);
    
    if (mode === 'subscribe' && token === CONFIG.verifyToken) {
        console.log('Webhook verified successfully');
        res.status(200).send(challenge);
    } else {
        res.status(403).send('Forbidden');
    }
});

app.post('/webhook', (req, res) => {
    console.log('Webhook event received');
    res.status(200).send('OK');
});

app.get('/health', (req, res) => {
    res.json({ status: 'healthy', timestamp: new Date().toISOString() });
});

app.listen(CONFIG.port, '0.0.0.0', () => {
    console.log(`Webhook running on port ${CONFIG.port}`);
});
EOF

npm init -y
npm install express

pm2 stop all || true
pm2 delete all || true
pm2 start webhook.js --name webhook
pm2 save

echo "Webhook deployed successfully!"
pm2 status
DEPLOY

# Copy file
spawn scp -o StrictHostKeyChecking=no /tmp/webhook-deploy.sh root@$host:/tmp/
expect "password:"
send "$password\r"
expect eof

# Execute deployment
spawn ssh -o StrictHostKeyChecking=no root@$host "bash /tmp/webhook-deploy.sh"
expect "password:"
send "$password\r"
expect eof

puts "\nDeployment complete!"