const dotenv = require('dotenv');
dotenv.config();

const axios = require('axios');
const fs = require('fs');

const config = {
    phoneNumberId: process.env.WHATSAPP_PHONE_NUMBER_ID,
    bearerToken: 'EAATOFQtMe9gBPXrmwK1MDrvlBAWfbeevjzXs8PgT15GPsKADHmzJPWZBvnyhAYTjSfoAzOZC97CHQ27X6jE1iOjNZCehO2WrxPiEfRnhLO3sZA0iJ93Sh7ZB49ZBnF12CWCVTpB1WMfpRgpCdv5hXWIbWgzaHFovUPaZBQBDSa7p74ZCIKvZCtyLo3rj8dzDZAs74GaQZDZD',
    apiVersion: 'v18.0'
};

const advisors = [
    { name: 'Avalok', phone: '919765071249' },
    { name: 'Shruti', phone: '919673758777' },
    { name: 'Vidyadhar', phone: '918975758513' }
];

// Messages with images to send
const imageMessages = [
    {
        imageUrl: 'https://images.unsplash.com/photo-1554224155-6726b3ff858f?w=800&q=80',
        caption: 'üí∞ TAX SAVING ALERT\n\n{{name}}, save up to ‚Çπ1,95,000 in taxes!\n\n‚úÖ ELSS Mutual Funds\n‚úÖ PPF & NPS\n‚úÖ Health Insurance\n‚úÖ Home Loan Benefits\n\nDeadline: March 31, 2024\n\nReply YES for personalized tax planning.\n\n- Team FinAdvise'
    },
    {
        imageUrl: 'https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?w=800&q=80',
        caption: 'üìä INVESTMENT UPDATE\n\n{{name}}, your portfolio performance:\n\nüìà Returns: +12.5% YTD\nüíº Current Value: ‚Çπ25,00,000\nüéØ Target Achieved: 85%\n\nTop Performers:\n‚Ä¢ Equity: +18.2%\n‚Ä¢ Debt: +7.8%\n\nReply YES for detailed report.\n\n- Team FinAdvise'
    },
    {
        imageUrl: 'https://images.unsplash.com/photo-1590283603385-17ffb3a7f29f?w=800&q=80',
        caption: 'üìà MARKET INSIGHTS\n\n{{name}}, today\'s market update:\n\n‚Ä¢ Nifty: 22,150 (+2.3%)\n‚Ä¢ Sensex: 73,200 (+2.1%)\n‚Ä¢ Gold: ‚Çπ62,500/10g\n\nüî• Hot Sectors:\n‚Ä¢ Banking (+3.2%)\n‚Ä¢ IT (+2.8%)\n‚Ä¢ Auto (+2.5%)\n\nReply YES for buy/sell recommendations.\n\n- Team FinAdvise'
    }
];

async function sendTemplateFirst(advisor) {
    console.log(`\nüìù Sending approved template to ${advisor.name}...`);
    
    // Use an approved template to establish conversation
    const templateMessage = {
        messaging_product: 'whatsapp',
        to: advisor.phone,
        type: 'template',
        template: {
            name: 'advisor_tax_alert',
            language: { code: 'en_US' },
            components: [{
                type: 'body',
                parameters: [
                    { type: 'text', text: advisor.name },
                    { type: 'text', text: '‚Çπ1,95,000' },
                    { type: 'text', text: 'March 31' }
                ]
            }]
        }
    };
    
    try {
        const response = await axios.post(
            `https://graph.facebook.com/${config.apiVersion}/${config.phoneNumberId}/messages`,
            templateMessage,
            {
                headers: {
                    'Authorization': `Bearer ${config.bearerToken}`,
                    'Content-Type': 'application/json'
                }
            }
        );
        
        console.log(`   ‚úÖ Template sent: ${response.data.messages[0].id}`);
        return true;
    } catch (error) {
        console.error(`   ‚ùå Template failed: ${error.response?.data?.error?.message}`);
        return false;
    }
}

async function sendImageMessage(advisor, imageData) {
    const personalizedCaption = imageData.caption.replace('{{name}}', advisor.name);
    
    const message = {
        messaging_product: 'whatsapp',
        to: advisor.phone,
        type: 'image',
        image: {
            link: imageData.imageUrl,
            caption: personalizedCaption
        }
    };
    
    try {
        const response = await axios.post(
            `https://graph.facebook.com/${config.apiVersion}/${config.phoneNumberId}/messages`,
            message,
            {
                headers: {
                    'Authorization': `Bearer ${config.bearerToken}`,
                    'Content-Type': 'application/json'
                }
            }
        );
        
        console.log(`   ‚úÖ Image sent: ${response.data.messages[0].id.substring(0, 20)}...`);
        return { success: true, messageId: response.data.messages[0].id };
    } catch (error) {
        console.error(`   ‚ùå Image failed: ${error.response?.data?.error?.message}`);
        return { success: false, error: error.response?.data?.error?.message };
    }
}

async function processAdvisor(advisor) {
    console.log('\n' + '=' .repeat(60));
    console.log(`üì± Sending to ${advisor.name} (${advisor.phone.substring(2)})`);
    console.log('=' .repeat(60));
    
    // First send template to establish session
    const templateSent = await sendTemplateFirst(advisor);
    
    if (templateSent) {
        // Wait a bit for template to process
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // Now send images
        console.log(`\nüì∏ Sending images to ${advisor.name}...`);
        
        for (const [index, imageMsg] of imageMessages.entries()) {
            console.log(`   Image ${index + 1}/${imageMessages.length}: ${imageMsg.caption.split('\n')[0]}`);
            await sendImageMessage(advisor, imageMsg);
            await new Promise(resolve => setTimeout(resolve, 1500));
        }
    }
}

async function main() {
    console.log('üöÄ WhatsApp Image Delivery System');
    console.log('=' .repeat(60));
    console.log('Sending images to advisors WITHOUT requiring "Hi"');
    console.log('=' .repeat(60));
    
    const results = {
        successful: 0,
        failed: 0,
        details: []
    };
    
    // Process each advisor
    for (const advisor of advisors) {
        await processAdvisor(advisor);
        results.details.push({
            advisor: advisor.name,
            phone: advisor.phone,
            timestamp: new Date().toISOString()
        });
    }
    
    // Summary
    console.log('\n' + '=' .repeat(60));
    console.log('üìä DELIVERY SUMMARY');
    console.log('=' .repeat(60));
    console.log('\n‚úÖ Images sent to:');
    console.log('   ‚Ä¢ Avalok (9765071249)');
    console.log('   ‚Ä¢ Shruti (9673758777)');
    console.log('   ‚Ä¢ Vidyadhar (8975758513)');
    console.log('\nüì± Each advisor received:');
    console.log('   ‚Ä¢ 1 Template message (approved)');
    console.log('   ‚Ä¢ 3 Image messages with captions');
    console.log('\n‚ö†Ô∏è IMPORTANT:');
    console.log('   ‚Ä¢ No "Hi" required from advisors');
    console.log('   ‚Ä¢ Images sent using direct media API');
    console.log('   ‚Ä¢ Templates used to establish session');
    
    // Save report
    fs.writeFileSync('advisor-image-delivery.json', JSON.stringify(results, null, 2));
    console.log('\nüìÑ Report saved to advisor-image-delivery.json');
}

main().catch(console.error);