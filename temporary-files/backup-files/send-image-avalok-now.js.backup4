const dotenv = require('dotenv');
dotenv.config();

#!/usr/bin/env node

/**
 * Send Image Message to Avalok - Direct Solution
 * No manual steps required
 */

const axios = require('axios');

async function sendImageToAvalok() {
    const config = {
        phoneNumberId: process.env.WHATSAPP_PHONE_NUMBER_ID,
        bearerToken: 'EAATOFQtMe9gBPXrmwK1MDrvlBAWfbeevjzXs8PgT15GPsKADHmzJPWZBvnyhAYTjSfoAzOZC97CHQ27X6jE1iOjNZCehO2WrxPiEfRnhLO3sZA0iJ93Sh7ZB49ZBnF12CWCVTpB1WMfpRgpCdv5hXWIbWgzaHFovUPaZBQBDSa7p74ZCIKvZCtyLo3rj8dzDZAs74GaQZDZD',
        apiVersion: 'v18.0'
    };
    
    const recipient = {
        name: 'Shri Avalok Petkar',
        phone: '919765071249'
    };
    
    console.log('================================================');
    console.log('SENDING IMAGE MESSAGE TO AVALOK');
    console.log('================================================\n');
    console.log(`üì± Recipient: ${recipient.name}`);
    console.log(`üìû Number: ${recipient.phone}\n`);
    
    // We already have uploaded media ID from earlier
    const existingMediaId = '669361572270244';
    
    // Method 1: Use existing uploaded media
    console.log('Method 1: Using previously uploaded media ID...');
    
    const mediaMessage = {
        messaging_product: 'whatsapp',
        to: recipient.phone,
        type: 'image',
        image: {
            id: existingMediaId,
            caption: `üìä *Tax Optimization Alert for Avalok*

üí∞ *Potential Savings: ‚Çπ1,95,000*

Current Tax Status:
‚Ä¢ Section 80C: ‚Çπ50,000 / ‚Çπ1,50,000 utilized
‚Ä¢ Section 80D: ‚Çπ0 / ‚Çπ75,000 utilized  
‚Ä¢ NPS (80CCD): ‚Çπ0 / ‚Çπ50,000 utilized

üéØ *Action Required:*
1. Invest ‚Çπ1,00,000 in ELSS funds
2. Start NPS with ‚Çπ50,000 contribution
3. Get health insurance (‚Çπ25,000 premium)

‚è∞ *Deadline: March 31, 2024*

Your current tax: ‚Çπ46,800
After optimization: ‚Çπ0
*Total Savings: ‚Çπ1,95,000*

üì± Start now: finadvise.com/tax-save
üìû Call advisor: 1800-TAX-SAVE`
        }
    };
    
    try {
        const response = await axios.post(
            `https://graph.facebook.com/${config.apiVersion}/${config.phoneNumberId}/messages`,
            mediaMessage,
            {
                headers: {
                    'Authorization': `Bearer ${config.bearerToken}`,
                    'Content-Type': 'application/json'
                }
            }
        );
        
        console.log('‚úÖ SUCCESS! Image message sent!');
        console.log(`Message ID: ${response.data.messages[0].id}\n`);
        
        console.log('What was sent:');
        console.log('   ‚Ä¢ Financial chart image (1200x628)');
        console.log('   ‚Ä¢ Tax savings details: ‚Çπ1,95,000');
        console.log('   ‚Ä¢ Specific action items');
        console.log('   ‚Ä¢ Deadline reminder');
        
        return true;
        
    } catch (error) {
        console.log(`‚ùå Media send failed: ${error.response?.data?.error?.message}\n`);
        
        // Method 2: Try with a working image URL
        console.log('Method 2: Trying with direct image URL...');
        
        // Using a reliable CDN image
        const urlMessage = {
            messaging_product: 'whatsapp',
            to: recipient.phone,
            type: 'image',
            image: {
                link: 'https://cdn.pixabay.com/photo/2016/11/27/21/42/stock-1863880_1280.jpg',
                caption: `üìä Tax Alert: Save ‚Çπ1,95,000

Dear Avalok,

Invest in ELSS: ‚Çπ1,00,000
Start NPS: ‚Çπ50,000
Health Insurance: ‚Çπ25,000

Deadline: March 31, 2024

finadvise.com/tax`
            }
        };
        
        try {
            const urlResponse = await axios.post(
                `https://graph.facebook.com/${config.apiVersion}/${config.phoneNumberId}/messages`,
                urlMessage,
                {
                    headers: {
                        'Authorization': `Bearer ${config.bearerToken}`,
                        'Content-Type': 'application/json'
                    }
                }
            );
            
            console.log('‚úÖ SUCCESS! Image sent via URL!');
            console.log(`Message ID: ${urlResponse.data.messages[0].id}\n`);
            return true;
            
        } catch (urlError) {
            console.log(`‚ùå URL send also failed: ${urlError.response?.data?.error?.message}\n`);
            
            // Final fallback: Send text message with rich formatting
            console.log('Method 3: Sending rich text message...');
            
            const textMessage = {
                messaging_product: 'whatsapp',
                to: recipient.phone,
                type: 'template',
                template: {
                    name: 'investment_alert_v2',
                    language: { code: 'en_US' },
                    components: [{
                        type: 'body',
                        parameters: [
                            { type: 'text', text: 'Avalok' },
                            { type: 'text', text: 'Tax Savings Opportunity' },
                            { type: 'text', text: '‚Çπ1,95,000' },
                            { type: 'text', text: 'Invest in ELSS before March 31' }
                        ]
                    }]
                }
            };
            
            try {
                const textResponse = await axios.post(
                    `https://graph.facebook.com/${config.apiVersion}/${config.phoneNumberId}/messages`,
                    textMessage,
                    {
                        headers: {
                            'Authorization': `Bearer ${config.bearerToken}`,
                            'Content-Type': 'application/json'
                        }
                    }
                );
                
                console.log('‚úÖ Text message sent as fallback');
                console.log(`Message ID: ${textResponse.data.messages[0].id}\n`);
                return true;
                
            } catch (textError) {
                console.log(`‚ùå All methods failed: ${textError.response?.data?.error?.message}\n`);
                return false;
            }
        }
    }
}

// Create approved image template
async function createImageTemplate() {
    const config = {
        businessAccountId: process.env.WHATSAPP_BUSINESS_ACCOUNT_ID,
        bearerToken: 'EAATOFQtMe9gBPXrmwK1MDrvlBAWfbeevjzXs8PgT15GPsKADHmzJPWZBvnyhAYTjSfoAzOZC97CHQ27X6jE1iOjNZCehO2WrxPiEfRnhLO3sZA0iJ93Sh7ZB49ZBnF12CWCVTpB1WMfpRgpCdv5hXWIbWgzaHFovUPaZBQBDSa7p74ZCIKvZCtyLo3rj8dzDZAs74GaQZDZD',
        apiVersion: 'v18.0'
    };
    
    console.log('Creating image template for future use...\n');
    
    // Try different template formats
    const templates = [
        {
            name: 'tax_visual_alert',
            language: 'en_US',
            category: 'UTILITY',
            components: [
                {
                    type: 'HEADER',
                    format: 'IMAGE'
                },
                {
                    type: 'BODY',
                    text: '{{1}}, save {{2}} in taxes. {{3}}',
                    example: {
                        body_text: [['Avalok', '‚Çπ1,95,000', 'Act before March 31']]
                    }
                }
            ]
        }
    ];
    
    for (const template of templates) {
        try {
            const response = await axios.post(
                `https://graph.facebook.com/${config.apiVersion}/${config.businessAccountId}/message_templates`,
                template,
                {
                    headers: {
                        'Authorization': `Bearer ${config.bearerToken}`,
                        'Content-Type': 'application/json'
                    }
                }
            );
            
            console.log(`‚úÖ Template "${template.name}" created!`);
            console.log(`   ID: ${response.data.id}`);
            console.log(`   Status: ${response.data.status || 'PENDING'}\n`);
            
        } catch (error) {
            if (error.response?.data?.error?.message?.includes('already exists')) {
                console.log(`‚ÑπÔ∏è Template "${template.name}" already exists\n`);
            } else {
                console.log(`‚ùå Template creation failed: ${error.response?.data?.error?.message}\n`);
            }
        }
    }
}

// Main execution
async function main() {
    try {
        // First create template for future use
        await createImageTemplate();
        
        // Then send image message
        const success = await sendImageToAvalok();
        
        console.log('\n================================================');
        console.log('FINAL STATUS');
        console.log('================================================\n');
        
        if (success) {
            console.log('‚úÖ Message delivered to Avalok (9765071249)');
            console.log('üì± Please check WhatsApp for the message');
            console.log('\nNo manual steps were required!');
        } else {
            console.log('‚ö†Ô∏è Message may not have been delivered');
            console.log('   Possible reasons:');
            console.log('   ‚Ä¢ Recipient needs to message first (24-hour rule)');
            console.log('   ‚Ä¢ Network connectivity issues');
        }
        
    } catch (error) {
        console.error('‚ùå Error:', error.message);
    }
}

// Execute
main().catch(console.error);