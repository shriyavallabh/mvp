# =============================================================================
# FinAdvise V2 WhatsApp Deliverability Engine - Environment Variables
# =============================================================================
# 
# CRITICAL SECURITY NOTICE:
# - NEVER commit actual secrets to version control
# - Copy this to .env and set real values
# - ROTATE ALL TOKENS IMMEDIATELY if any were exposed
# - Use secrets manager in production (AWS Secrets Manager, etc.)
#
# =============================================================================

# -----------------------------------------------------------------------------
# META/WHATSAPP CORE CONFIGURATION (REQUIRED)
# -----------------------------------------------------------------------------

# Meta App ID (from Meta App Dashboard)
# CRITICAL: This is different from WABA ID - needed for resumable uploads
WHATSAPP_APP_ID=your_meta_app_id_here

# Meta App Secret (from Meta App Dashboard)
WHATSAPP_APP_SECRET=your_meta_app_secret_here

# WhatsApp Business Account ID (WABA ID)
WHATSAPP_BUSINESS_ACCOUNT_ID=your_waba_id_here

# WhatsApp Phone Number ID (from Meta Business Manager)
WHATSAPP_PHONE_NUMBER_ID=your_phone_number_id_here

# System User Access Token (with whatsapp_business_messaging permission)
# Generate from Business Manager > System Users
WHATSAPP_ACCESS_TOKEN=your_system_user_token_here

# Webhook Verification Token (minimum 20 characters, random)
# Generate with: openssl rand -base64 32
WHATSAPP_WEBHOOK_VERIFY_TOKEN=your_secure_webhook_verify_token_here

# -----------------------------------------------------------------------------
# TEMPLATE CONFIGURATION
# -----------------------------------------------------------------------------

# Media Templates (with IMAGE header)
TEMPLATE_MEDIA_DAILY=daily_financial_update_v2
TEMPLATE_MEDIA_UTILITY=market_alert_utility

# Text Templates (for fallback)
TEMPLATE_TEXT_FALLBACK=daily_update_link
TEMPLATE_TEXT_NOTIFICATION=simple_notification

# -----------------------------------------------------------------------------
# CDN & OG PAGE CONFIGURATION
# -----------------------------------------------------------------------------

# Base URL for image CDN
CDN_BASE_URL=https://finadvise.app/images

# Base URL for OG preview pages
OG_PAGE_BASE_URL=https://finadvise.app/daily

# -----------------------------------------------------------------------------
# DELIVERY CONFIGURATION
# -----------------------------------------------------------------------------

# Pacing Configuration
COHORT_RATE=500              # Messages per minute per cohort
CONCURRENT_WORKERS=20        # Parallel sending workers
RETRY_ATTEMPTS=3            # Max retry attempts
RETRY_DELAY=5000            # Delay between retries (ms)

# Timeout Configuration
WEBHOOK_TIMEOUT=120000      # Max wait for webhook confirmation (ms)
FALLBACK_TIMEOUT=60000      # Trigger fallback after this timeout (ms)

# Cool-off Periods (hours)
COOLOFF_POLICY=72           # Cool-off after policy drop
COOLOFF_UNDELIVERABLE=24    # Cool-off for undeliverable contacts

# -----------------------------------------------------------------------------
# FEATURE FLAGS
# -----------------------------------------------------------------------------

USE_MEDIA_ID=false          # Use media_id instead of public links
USE_PUBLIC_LINK=true        # Use public CDN links for images
ENABLE_FALLBACK=true        # Enable automatic fallback to text+OG
ENABLE_WEBHOOKS=true        # Enable webhook processing
DEBUG_MODE=false            # Enable debug logging

# -----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# -----------------------------------------------------------------------------

# PostgreSQL Connection (for production)
DATABASE_URL=postgresql://user:password@localhost:5432/finadvise

# Or use JSON file storage (for development)
USE_JSON_STORAGE=true
JSON_STORAGE_PATH=./data

# -----------------------------------------------------------------------------
# MONITORING & ALERTS
# -----------------------------------------------------------------------------

# Alert Thresholds
ALERT_FAILURE_RATE=0.1      # Alert if failure rate > 10%
ALERT_DELIVERY_RATE=0.8     # Alert if delivery rate < 80%

# Slack Webhook for Alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Admin WhatsApp Numbers (comma-separated, with country code)
ADMIN_WHATSAPP_NUMBERS=919876543210,919876543211

# -----------------------------------------------------------------------------
# WEBHOOK SERVER CONFIGURATION
# -----------------------------------------------------------------------------

WEBHOOK_PORT=5001
WEBHOOK_HOST=0.0.0.0

# Public URL for webhook (update with your domain)
WEBHOOK_PUBLIC_URL=https://your-domain.com/webhooks/whatsapp

# -----------------------------------------------------------------------------
# SCHEDULER CONFIGURATION
# -----------------------------------------------------------------------------

# Cron expressions
NIGHTLY_GENERATE_CRON=0 23 * * *    # 11:00 PM daily
MORNING_SEND_CRON=0 5 * * *         # 5:00 AM daily

# -----------------------------------------------------------------------------
# GEMINI API (for image generation)
# -----------------------------------------------------------------------------

GEMINI_API_KEY=your_gemini_api_key_here

# -----------------------------------------------------------------------------
# APPLICATION CONFIGURATION
# -----------------------------------------------------------------------------

NODE_ENV=production
LOG_LEVEL=info
TZ=Asia/Kolkata

# -----------------------------------------------------------------------------
# SECURITY NOTES
# -----------------------------------------------------------------------------
#
# 1. Token Rotation Schedule:
#    - Access Tokens: Every 60 days
#    - Webhook Tokens: Every 90 days
#    - App Secret: Only when compromised
#
# 2. Production Security:
#    - Use environment variable injection, not .env files
#    - Set file permissions: chmod 600 .env
#    - Use secrets manager (AWS Secrets Manager, HashiCorp Vault)
#    - Enable audit logging for all token usage
#
# 3. If Tokens Were Exposed:
#    - Immediately generate new System User token in Business Manager
#    - Update webhook verify token in both code and Meta webhook settings
#    - Audit recent API calls for unauthorized usage
#    - Enable 2FA on all Meta Business accounts
#
# =============================================================================